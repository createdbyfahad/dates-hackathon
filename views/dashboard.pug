extends layout

block scripts
  script(src='/js/Chart.min.js')
  script.
    function shadeColor(color, percent) {

      var R = parseInt(color.substring(1, 3), 16);
      var G = parseInt(color.substring(3, 5), 16);
      var B = parseInt(color.substring(5, 7), 16);

      R = parseInt(R * (100 + percent) / 100);
      G = parseInt(G * (100 + percent) / 100);
      B = parseInt(B * (100 + percent) / 100);

      R = (R < 255) ? R : 255;
      G = (G < 255) ? G : 255;
      B = (B < 255) ? B : 255;

      var RR = ((R.toString(16).length == 1) ? "0" + R.toString(16) : R.toString(16));
      var GG = ((G.toString(16).length == 1) ? "0" + G.toString(16) : G.toString(16));
      var BB = ((B.toString(16).length == 1) ? "0" + B.toString(16) : B.toString(16));

      return "#" + RR + GG + BB;
    }
    var ctx = document.getElementById('myChart');
    var myChart = new Chart(ctx, {
      type: 'line',
      data: {
        datasets: [{
          label: 'Total Harvest',
          data: !{harvests},
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          yAxes: [{
            stacked: true
          }],
          xAxes: [{
            type: 'category',
            labels: !{harvests}.map(v => v.x),
            position: 'bottom'
          }]
        }
      }
    });
    const pYr = !{progressYr}
    console.log(pYr)
    Object.keys(pYr).forEach(function (k) {
      let v = pYr[k]
      let ctx1 = $("td[data-index='"+k+"']");
      if(ctx1 !== undefined){
        // found the cell fill with info
        let growth = Math.round(v*100);
        ctx1.html("ðŸŒ´<br /><b>"+Math.round(v*100)+"%</b>");
        if(growth > 100){
          let shade = Math.abs(growth) / 1000;
          ctx1.css("background-color", shadeColor("#098b2b", shade))
        }else if(growth == 0){
          ctx1.css("background-color", "#dee2e6")
        }else{
          let shade = Math.abs(growth) / 1000;
          ctx1.css("background-color", shadeColor("#af303d", shade))
        }
      }
    });



block content
  h1 Dashboard
  p.lead A dashboard for the farmer.
  hr
  .row
    h4 Total farm harvest over the years
    canvas(id="myChart" width="400" height="200")
  .row
    h4 Map of plams and their harvest of this year compared to last year
    table.table.table-hover.fixed-width
      thead
        tr
          - var i = minColumn;
            th
          while i <= maxColumn
            th=i
            - i++;
      tbody
        - i = minRow
        while i <= maxRow
          - var j = minColumn;
           tr
            td=i
             while j <= maxColumn
               - var ind = i.toString() + j.toString();
               td(data-index=ind)
               - j++;
           - i++;


